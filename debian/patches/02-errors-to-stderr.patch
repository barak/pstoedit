From: Roland Stigge <stigge@antcom.de>
Date: Sun, 10 Jul 2011 12:19:43 +0200
Subject: errors to stderr

This patch redirects error messages to stderr.
I.e., send error messages to standard error even when diagnostic
messages, on stream diag, are being sent to standard output.

Bug-Debian: http://bugs.debian.org/551125
---
 src/pstoedit.cpp | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/pstoedit.cpp b/src/pstoedit.cpp
index 7f66d23..33a297a 100644
--- a/src/pstoedit.cpp
+++ b/src/pstoedit.cpp
@@ -414,7 +414,7 @@ extern "C" DLLEXPORT
 		break;
 			}
 	default:{
-		diag << "more than two file arguments " << endl;
+		errstream << "more than two file arguments " << endl;
 		shortusage(diag);
 		return 1;
 			}
@@ -500,7 +500,7 @@ extern "C" DLLEXPORT
 		usage(diag,false,false);
 		const char *gstocall = whichPI(diag, options.verbose, options.gsregbase.value.c_str(),options.GSToUse.value.c_str());
 		if (gstocall != 0) {
-			diag << "Default interpreter is " << gstocall << endl;
+			errstream << "Default interpreter is " << gstocall << endl;
 		}
 		getglobalRp()->explainformats(diag);
 		return 1;
@@ -577,13 +577,13 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 	if (options.drivername.value.length() == 0) {
 		// try to find driver according to suffix of input file
 		if (!options.nameOfOutputFile) {
-			diag << "No output format specified (-f option) and format could not be deduced from suffix of output file since no output file name was given" << endl;
+			errstream << "No output format specified (-f option) and format could not be deduced from suffix of output file since no output file name was given" << endl;
 			shortusage(diag);
 			return 1;
 		} else {
 			const char * suffixOfInputFile = strrchr(options.nameOfOutputFile,'.');
 			if (!suffixOfInputFile) {
-				diag << "No output format specified (-f option) and format could not be deduced from suffix of output file since no suffix was found" << endl;
+				errstream << "No output format specified (-f option) and format could not be deduced from suffix of output file since no suffix was found" << endl;
 				shortusage(diag);
 				return 1;
 			} else {
@@ -592,7 +592,7 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 					errstream << "No explicit output format specified - using " << suffixDriverDesc->symbolicname << " as derived from suffix of output file" << endl;
 					options.drivername = suffixDriverDesc->symbolicname;
 				} else {
-					diag << "No output format specified (-f option) and format could not be uniquely deduced from suffix " << suffixOfInputFile << " of output file" << endl;
+					errstream << "No output format specified (-f option) and format could not be uniquely deduced from suffix " << suffixOfInputFile << " of output file" << endl;
 					// usage(errstream);
 					getglobalRp()->explainformats(diag); // ,true);
 					return 1;
@@ -611,13 +611,13 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 		}
 		const DriverDescription *currentDriverDesc = getglobalRp()->getDriverDescForName(options.drivername.value.c_str());
 		if (currentDriverDesc == 0) {
-			diag << "Unsupported output format " << options.drivername.value.c_str() << endl;
+			errstream << "Unsupported output format " << options.drivername.value.c_str() << endl;
 			getglobalRp()->explainformats(diag);
 			return 1;
 		}
 
 		if ( currentDriverDesc->backendFileOpenType!=DriverDescription::normalopen && !options.nameOfOutputFile ) {
-			diag << "The driver for the selected format cannot write to standard output because it writes binary data" << endl;
+			errstream << "The driver for the selected format cannot write to standard output because it writes binary data" << endl;
 			return 1;
 		}
 
@@ -625,7 +625,7 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 		if (driveroptions && strequal(driveroptions, "-help") ) {
 			ProgramOptions* dummy = currentDriverDesc->createDriverOptions();
 			if (dummy->numberOfOptions() ) {
-				diag << "The driver for this output format supports the following additional options: (specify using -f \"format:-option1 -option2\")" << endl;
+				errstream << "The driver for this output format supports the following additional options: (specify using -f \"format:-option1 -option2\")" << endl;
 				dummy->showhelp(diag,false,false);
 			}
 			delete dummy;
@@ -635,7 +635,7 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 // TODO:
 			// Check for input file (exists, or stdin) stdout handling
 			if (!options.nameOfInputFile) {
-				diag << "Cannot read from standard input if GS drivers are selected" << endl;
+				errstream << "Cannot read from standard input if GS drivers are selected" << endl;
 				return 1;
 			}
 			// an input file was given as argument
@@ -646,23 +646,23 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 			convertBackSlashes(options.nameOfInputFile);
 
 			if (!fileExists(options.nameOfInputFile)) {
-				diag << "Could not open file " << options.nameOfInputFile << " for input" << endl;
+				errstream << "Could not open file " << options.nameOfInputFile << " for input" << endl;
 				return 1;
 			}
 
 			if (!options.nameOfOutputFile) {
-				diag <<
+				errstream <<
 					"Cannot write to standard output if GS drivers are selected" << endl;
 				return 1;
 			}
 
 			if (options.backendonly) {
-				diag << "The -bo option cannot be used if GS drivers are selected " << endl;
+				errstream << "The -bo option cannot be used if GS drivers are selected " << endl;
 				return 1;
 			}
 
 			if (!driveroptions) {
-				diag <<
+				errstream <<
 					"The gs output driver needs a gs-device as argument, e.g. gs:pdfwrite" << endl;
 				return 1;
 			}
