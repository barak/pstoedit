From: "Barak A. Pearlmutter" <barak+git@pearlmutter.net>
Date: Thu, 6 Oct 2016 08:11:22 +0100
Subject: spelling pathes

pathes to paths
---
 doc/changelog.htm   |  6 +++---
 src/drvbase.cpp     | 24 ++++++++++++------------
 src/drvbase.h       | 16 ++++++++--------
 src/drvcairo.cpp    |  4 ++--
 src/drvdxf.cpp      |  8 ++++----
 src/drvgcode.cpp    |  4 ++--
 src/drvgnplt.cpp    |  4 ++--
 src/drvgschem.cpp   |  4 ++--
 src/drvhpgl.cpp     |  8 ++++----
 src/drvidraw.cpp    |  4 ++--
 src/drvjava.cpp     |  4 ++--
 src/drvjava2.cpp    |  4 ++--
 src/drvkillu.cpp    |  4 ++--
 src/drvlatex2e.cpp  |  4 ++--
 src/drvlwo.cpp      |  4 ++--
 src/drvmagick++.cpp |  4 ++--
 src/drvmma.cpp      |  4 ++--
 src/drvmpost.cpp    |  4 ++--
 src/drvpcb1.cpp     |  4 ++--
 src/drvpcb2.cpp     |  4 ++--
 src/drvpcbfill.cpp  |  4 ++--
 src/drvpdf.cpp      |  4 ++--
 src/drvpic.cpp      |  4 ++--
 src/drvpptx.cpp     |  4 ++--
 src/drvrib.cpp      |  4 ++--
 src/drvrpl.cpp      |  4 ++--
 src/drvsampl.cpp    |  4 ++--
 src/drvsvm.cpp      |  2 +-
 src/drvswf.cpp      |  4 ++--
 src/drvtext.cpp     |  4 ++--
 src/drvtgif.cpp     |  4 ++--
 src/drvtk.cpp       |  4 ++--
 src/drvvtk.cpp      |  4 ++--
 src/drvwmf.cpp      |  8 ++++----
 src/lexyy.cpp       |  4 ++--
 src/pstoedit.cpp    |  4 ++--
 src/pstoedll.h      |  2 +-
 37 files changed, 95 insertions(+), 95 deletions(-)

diff --git a/doc/changelog.htm b/doc/changelog.htm
index 03e2f6c..4d15409 100755
--- a/doc/changelog.htm
+++ b/doc/changelog.htm
@@ -310,7 +310,7 @@
     Russell Lang.</li>
   <li>added a general -help option for each driver to show driver specific options. For
     example -f xfig:-help shows specific options for the fig backend.</li>
-  <li>minor bug fix in CGM backend - some pathes triggered an assertion violation.</li>
+  <li>minor bug fix in CGM backend - some paths triggered an assertion violation.</li>
   <li>several enhancements for the DXF backend. Now it supports the DXF SPLINE element as
     well. Big thanks to Daniel Gehriger <a href="mailto:gehriger_AT_linkcad.com">(gehriger_AT_linkcad.com</a>)
     for his help concerning the DXF format.</li>
@@ -534,7 +534,7 @@
     gs5.82.</li>
   <li>bux fix in documentation (-fontmap instead of -mapfile).</li>
   <li>added some support for easier retrieval of dash patterns from within backends.</li>
-  <li>extended the check for &quot;mergable&quot; path to include also eofilled pathes and
+  <li>extended the check for &quot;mergable&quot; path to include also eofilled paths and
     made pathsCanBeMerged virtual so it can be overloaded by a specific backend.</li>
   <li>changed again the version of drvbase. This means that all plugins need to be updated
     (just the .dll not the keys). Otherwise you will get an error message.</li>
@@ -560,7 +560,7 @@
   <li>Burkhard Plaum <a href="mailto:(plaum_AT_IPF.Uni-Stuttgart.de">(plaum_AT_IPF.Uni-Stuttgart.de</a>)
     added support for complex filled paths (paths consisting of an arbitraty sequence of
     moveto, lineto and curveto in combination with fill and eofill) to the xfig backend. In
-    future, this will be made available to other backend that don't support such pathes as
+    future, this will be made available to other backend that don't support such paths as
     well. In order to activate this feature you need to specify the -ssp (simulate sub paths)
     option.</li>
   <li>changed again the version of drvbase due to the support for complex paths. This means
diff --git a/src/drvbase.cpp b/src/drvbase.cpp
index 5acd2bb..1f4cff2 100644
--- a/src/drvbase.cpp
+++ b/src/drvbase.cpp
@@ -326,7 +326,7 @@ bool drvbase::pathsCanBeMerged(const PathInfo & path1, const PathInfo & path2) c
 			 && path2.currentLineType == solid && ((path1.currentShowType == fill)
 												   || (path1.currentShowType == eofill))))
 		&& (path1.numberOfElementsInPath == path2.numberOfElementsInPath)) {
-		//errf << "Pathes seem to be mergeable" << endl;
+		//errf << "Paths seem to be mergeable" << endl;
 		for (unsigned int i = 0; i < path1.numberOfElementsInPath; i++) {
 			const basedrawingelement *bd1 = path1.path[i];
 			const basedrawingelement *bd2 = path2.path[i];
@@ -339,11 +339,11 @@ bool drvbase::pathsCanBeMerged(const PathInfo & path1, const PathInfo & path2) c
 				return false;
 		}
 		if (verbose)
-			errf << "Pathes are mergeable" << endl;
+			errf << "Paths are mergeable" << endl;
 		return true;
 	} else {
 		if (verbose)
-			errf << "Pathes are not mergable:" <<
+			errf << "Paths are not mergable:" <<
 				" PI1 st " << (int) path1.currentShowType <<
 				" PI1 lt " << (int) path1.currentLineType <<
 				" PI1 el " << path1.numberOfElementsInPath <<
@@ -881,7 +881,7 @@ unsigned int drvbase::nrOfSubpaths() const
 }
 
 
-void drvbase::dumpRearrangedPathes()
+void drvbase::dumpRearrangedPaths()
 {
 	// Count the subpaths
 	unsigned int numpaths = nrOfSubpaths();
@@ -959,7 +959,7 @@ bool drvbase::close_output_file_and_reopen_in_binary_mode()
 void drvbase::beginClipPath()
 {
 	// now we start a clippath, so we need to dump
-	// all previous pathes
+	// all previous paths
 	flushOutStanding();
 	last_currentPath = currentPath;
 	currentPath = &clippath;
@@ -1031,7 +1031,7 @@ void drvbase::dumpPath(bool doFlushText)
 		// a polygon with two points is drawn as a line
 
 		// PROBLEM ! This resetting has an impact on the subsequent segments
-		// if subpathes are not supported by the backend !!!!
+		// if subpaths are not supported by the backend !!!!
 		currentPath->isPolygon = false;
 		currentPath->currentShowType = drvbase::stroke;
 	}
@@ -1085,8 +1085,8 @@ void drvbase::dumpPath(bool doFlushText)
 	}
 	if (numberOfElementsInPath() > 0) {
 
-		// nothing to do for empty pathes
-		// pathes may be empty due to a merge operation
+		// nothing to do for empty paths
+		// paths may be empty due to a merge operation
 
 		if (verbose) {
 			errf << "working on";
@@ -1136,13 +1136,13 @@ void drvbase::dumpPath(bool doFlushText)
 					show_rectangle(llx, lly, urx, ury);
 				} else {
 					if (globaloptions.simulateSubPaths)
-						dumpRearrangedPathes();
+						dumpRearrangedPaths();
 					else
 						show_or_convert_path();
 				}
 			} else {			/* PolyLine */
 				if (globaloptions.simulateSubPaths)
-					dumpRearrangedPathes();
+					dumpRearrangedPaths();
 				else
 					show_or_convert_path();
 			}
@@ -1491,7 +1491,7 @@ DriverDescription::DriverDescription(	const char *const s_name,
 										const char *const short_expl, 
 										const char *const long_expl, 
 										const char *const suffix_p, 
-										const bool backendSupportsSubPathes_p, 
+										const bool backendSupportsSubPaths_p, 
 										const bool backendSupportsCurveto_p, 
 										const bool backendSupportsMerging_p,	// merge a separate outline and filling of a polygon -> 1. element
 										const bool backendSupportsText_p, 
@@ -1505,7 +1505,7 @@ DriverDescription::DriverDescription(	const char *const s_name,
 	short_explanation(short_expl), 
 	long_explanation(long_expl), 
 	suffix(suffix_p), 
-	backendSupportsSubPathes(backendSupportsSubPathes_p), 
+	backendSupportsSubPaths(backendSupportsSubPaths_p), 
 	backendSupportsCurveto(backendSupportsCurveto_p), 
 	backendSupportsMerging(backendSupportsMerging_p),	// merge a separate outline and filling of a polygon -> 1. element
 	backendSupportsText(backendSupportsText_p), 
diff --git a/src/drvbase.h b/src/drvbase.h
index 40a5dae..160f693 100644
--- a/src/drvbase.h
+++ b/src/drvbase.h
@@ -244,7 +244,7 @@ protected:
 #endif
 		bool	 	isPolygon; // whether current path was closed via closepath or not
 		unsigned int	numberOfElementsInPath;
-		unsigned int	subpathoffset; // normally 0, but if subpathes are simulated
+		unsigned int	subpathoffset; // normally 0, but if subpaths are simulated
 									   // then this is set to the begin of the current subpath 
 									   // before show_path is executed
 		float           currentLineWidth;
@@ -310,7 +310,7 @@ protected:
 //lint -esym(1712,SaveRestoreInfo) // no default ctor
 	class DLLEXPORT SaveRestoreInfo {
 	public:
-		unsigned int clippathlevel; // number of clippathes since opening (=save)
+		unsigned int clippathlevel; // number of clippaths since opening (=save)
 		unsigned int savelevel;	
 		SaveRestoreInfo * previous;	
 		SaveRestoreInfo * next;
@@ -533,7 +533,7 @@ public:
 
 	void		flushOutStanding( flushmode_t flushmode = flushall);
 
-	void		dumpRearrangedPathes(); // show the current subpathes after calling rearrange
+	void		dumpRearrangedPaths(); // show the current subpaths after calling rearrange
 
 	unsigned int nrOfSubpaths() const;
 
@@ -727,7 +727,7 @@ const Dtype curveto = 4;
 #else
 enum  Dtype {moveto, lineto, closepath, curveto};
 #endif
-// closepath is only generated if backend supportes subpathes
+// closepath is only generated if backend supportes subpaths
 // curveto   is only generated if backend supportes it
 
 //lint -esym(1769,basedrawingelement)
@@ -949,7 +949,7 @@ public:
 			const char * const short_expl, 
 			const char * const long_expl,
 			const char * const suffix_p, 
-			const bool 	backendSupportsSubPathes_p,
+			const bool 	backendSupportsSubPaths_p,
 			const bool 	backendSupportsCurveto_p,
 			const bool 	backendSupportsMerging_p, // merge a separate outline and filling of a polygon -> 1. element
 			const bool 	backendSupportsText_p,
@@ -984,7 +984,7 @@ public:
 	const char * const long_explanation;
 	const char * const suffix;
 
-	const bool 	backendSupportsSubPathes;
+	const bool 	backendSupportsSubPaths;
 	const bool 	backendSupportsCurveto;
 	const bool 	backendSupportsMerging; // merge a separate outline and filling of a polygon -> 1. element
 	const bool 	backendSupportsText;
@@ -1017,7 +1017,7 @@ public:
 			const char * short_expl_p, 
 			const char * long_expl_p, 
 			const char * suffix_p, 
-			const bool 	backendSupportsSubPathes_p,
+			const bool 	backendSupportsSubPaths_p,
 			const bool 	backendSupportsCurveto_p,
 			const bool 	backendSupportsMerging_p, // merge a separate outline and filling of a polygon -> 1. element
 			const bool 	backendSupportsText_p,
@@ -1032,7 +1032,7 @@ public:
 			short_expl_p,
 			long_expl_p, 
 			suffix_p, 
-			backendSupportsSubPathes_p,
+			backendSupportsSubPaths_p,
 			backendSupportsCurveto_p,
 			backendSupportsMerging_p, 
 			backendSupportsText_p,
diff --git a/src/drvcairo.cpp b/src/drvcairo.cpp
index f87ea47..9317d7a 100644
--- a/src/drvcairo.cpp
+++ b/src/drvcairo.cpp
@@ -700,8 +700,8 @@ static DriverDescriptionT < drvCAIRO > D_cairo("cairo",  // name
 					       "cairo driver", // short description
 					       "generates compilable c code for rendering with cairo", // long description
 					       "c", // output file suffix
-					       true,	// backend supports subpathes
-					       // if subpathes are supported, the backend must deal with
+					       true,	// backend supports subpaths
+					       // if subpaths are supported, the backend must deal with
 					       // sequences of the following form
 					       // moveto (start of subpath)
 					       // lineto (a line segment)
diff --git a/src/drvdxf.cpp b/src/drvdxf.cpp
index dc433b4..815fef6 100644
--- a/src/drvdxf.cpp
+++ b/src/drvdxf.cpp
@@ -1622,8 +1622,8 @@ void drvDXF::show_path()
 
 
 
-static DriverDescriptionT < drvDXF > D_dxf("dxf", "CAD exchange format","", "dxf", false,	// if backend supports subpathes, else 0
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvDXF > D_dxf("dxf", "CAD exchange format","", "dxf", false,	// if backend supports subpaths, else 0
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
@@ -1643,8 +1643,8 @@ static DriverDescriptionT < drvDXF > D_dxf("dxf", "CAD exchange format","", "dxf
 										   false /*clipping */ 
 										   );
 
-static DriverDescriptionT < drvDXF > D_dxf_s("dxf_s", "CAD exchange format with splines","", "dxf", false,	// if backend supports subpathes, else 0
-											 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvDXF > D_dxf_s("dxf_s", "CAD exchange format with splines","", "dxf", false,	// if backend supports subpaths, else 0
+											 // if subpaths are supported, the backend must deal with
 											 // sequences of the following form
 											 // moveto (start of subpath)
 											 // lineto (a line segment)
diff --git a/src/drvgcode.cpp b/src/drvgcode.cpp
index 9ea33cd..53c9229 100644
--- a/src/drvgcode.cpp
+++ b/src/drvgcode.cpp
@@ -136,8 +136,8 @@ void drvGCODE::show_path()
 
 
 static DriverDescriptionT < drvGCODE > D_gcode("gcode", "emc2 gcode format", 
-												 "See also:  \\URL{http://linuxcnc.org/}","gcode", false,	// if backend supports subpathes
-												   // if subpathes are supported, the backend must deal with
+												 "See also:  \\URL{http://linuxcnc.org/}","gcode", false,	// if backend supports subpaths
+												   // if subpaths are supported, the backend must deal with
 												   // sequences of the following form
 												   // moveto (start of subpath)
 												   // lineto (a line segment)
diff --git a/src/drvgnplt.cpp b/src/drvgnplt.cpp
index c39ce9d..60dcfbf 100644
--- a/src/drvgnplt.cpp
+++ b/src/drvgnplt.cpp
@@ -64,8 +64,8 @@ void drvGNUPLOT::show_path()
 }
 
 
-static DriverDescriptionT < drvGNUPLOT > D_gnuplot("gnuplot", "gnuplot format", "","gnuplot", false,	// if backend supports subpathes
-												   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvGNUPLOT > D_gnuplot("gnuplot", "gnuplot format", "","gnuplot", false,	// if backend supports subpaths
+												   // if subpaths are supported, the backend must deal with
 												   // sequences of the following form
 												   // moveto (start of subpath)
 												   // lineto (a line segment)
diff --git a/src/drvgschem.cpp b/src/drvgschem.cpp
index 93be52b..395d85e 100644
--- a/src/drvgschem.cpp
+++ b/src/drvgschem.cpp
@@ -73,8 +73,8 @@ void drvGSCHEM::show_path()
 
 
 static DriverDescriptionT < drvGSCHEM > D_gschem("gschem", "gschem format", 
-												 "See also:  \\URL{http://www.geda.seul.org/tools/gschem/}","gschem", false,	// if backend supports subpathes
-												   // if subpathes are supported, the backend must deal with
+												 "See also:  \\URL{http://www.geda.seul.org/tools/gschem/}","gschem", false,	// if backend supports subpaths
+												   // if subpaths are supported, the backend must deal with
 												   // sequences of the following form
 												   // moveto (start of subpath)
 												   // lineto (a line segment)
diff --git a/src/drvhpgl.cpp b/src/drvhpgl.cpp
index e6e80e9..9187e9b 100644
--- a/src/drvhpgl.cpp
+++ b/src/drvhpgl.cpp
@@ -509,8 +509,8 @@ void drvHPGL::show_path()
 }
 
 
-static DriverDescriptionT < drvHPGL > D_HPGL("hpgl", "HPGL code", "","hpgl", false,	// backend supports subpathes
-												 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvHPGL > D_HPGL("hpgl", "HPGL code", "","hpgl", false,	// backend supports subpaths
+												 // if subpaths are supported, the backend must deal with
 												 // sequences of the following form
 												 // moveto (start of subpath)
 												 // lineto (a line segment)
@@ -529,8 +529,8 @@ static DriverDescriptionT < drvHPGL > D_HPGL("hpgl", "HPGL code", "","hpgl", fal
 												 DriverDescription::normalopen, false,	// backend support multiple pages
 												 false /*clipping */ );
 
-static DriverDescriptionT < drvHPGL > D_PCL("pcl", "PCL code", "","pcl", false,	// backend supports subpathes
-												 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvHPGL > D_PCL("pcl", "PCL code", "","pcl", false,	// backend supports subpaths
+												 // if subpaths are supported, the backend must deal with
 												 // sequences of the following form
 												 // moveto (start of subpath)
 												 // lineto (a line segment)
diff --git a/src/drvidraw.cpp b/src/drvidraw.cpp
index d844af3..69fba22 100644
--- a/src/drvidraw.cpp
+++ b/src/drvidraw.cpp
@@ -1012,8 +1012,8 @@ void drvIDRAW::show_image(const PSImage & imageinfo)
 	imageinfo.writeIdrawImage(outf, 1.0f / IDRAW_SCALING);
 }
 
-static DriverDescriptionT < drvIDRAW > D_idraw("idraw", "Interviews draw format (EPS)", "", "idraw", false,	// if backend supports subpathes, else 0
-											   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvIDRAW > D_idraw("idraw", "Interviews draw format (EPS)", "", "idraw", false,	// if backend supports subpaths, else 0
+											   // if subpaths are supported, the backend must deal with
 											   // sequences of the following form
 											   // moveto (start of subpath)
 											   // lineto (a line segment)
diff --git a/src/drvjava.cpp b/src/drvjava.cpp
index e207cef..fdcd195 100644
--- a/src/drvjava.cpp
+++ b/src/drvjava.cpp
@@ -236,8 +236,8 @@ void drvJAVA::show_path()
 }
 
 
-static DriverDescriptionT < drvJAVA > D_java("java1", "java 1 applet source code", "","java", false,	// if backend supports subpathes, else 0
-											 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvJAVA > D_java("java1", "java 1 applet source code", "","java", false,	// if backend supports subpaths, else 0
+											 // if subpaths are supported, the backend must deal with
 											 // sequences of the following form
 											 // moveto (start of subpath)
 											 // lineto (a line segment)
diff --git a/src/drvjava2.cpp b/src/drvjava2.cpp
index 2d32372..8b510e4 100644
--- a/src/drvjava2.cpp
+++ b/src/drvjava2.cpp
@@ -408,8 +408,8 @@ void drvJAVA2::show_image(const PSImage & imageinfo)
 }
 
 
-static DriverDescriptionT < drvJAVA2 > D_java2("java2", "java 2 source code", "","java2", true,	// if backend supports subpathes, else 0
-											   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvJAVA2 > D_java2("java2", "java 2 source code", "","java2", true,	// if backend supports subpaths, else 0
+											   // if subpaths are supported, the backend must deal with
 											   // sequences of the following form
 											   // moveto (start of subpath)
 											   // lineto (a line segment)
diff --git a/src/drvkillu.cpp b/src/drvkillu.cpp
index 4007ec7..aff8235 100644
--- a/src/drvkillu.cpp
+++ b/src/drvkillu.cpp
@@ -191,8 +191,8 @@ int drvKontour::cvtColor(float c)
 	return int ((c * 255.0) + 0.5);
 }
 
-static DriverDescriptionT < drvKontour > D_Kontour("kil", ".kil format for Kontour", "","kil", false,	// backend supports subpathes
-															 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvKontour > D_Kontour("kil", ".kil format for Kontour", "","kil", false,	// backend supports subpaths
+															 // if subpaths are supported, the backend must deal with
 															 // sequences of the following form
 															 // moveto (start of subpath)
 															 // lineto (a line segment)
diff --git a/src/drvlatex2e.cpp b/src/drvlatex2e.cpp
index dbacb58..7e2b063 100644
--- a/src/drvlatex2e.cpp
+++ b/src/drvlatex2e.cpp
@@ -394,8 +394,8 @@ void drvLATEX2E::show_image(const Image &  )
 #endif
 
 // Describe the LaTeX2e backend's capabilities.
-static DriverDescriptionT < drvLATEX2E > D_latex2e("latex2e", "\\LaTeX2e picture format", "","tex", true,	// backend supports subpathes
-												   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvLATEX2E > D_latex2e("latex2e", "\\LaTeX2e picture format", "","tex", true,	// backend supports subpaths
+												   // if subpaths are supported, the backend must deal with
 												   // sequences of the following form
 												   // moveto (start of subpath)
 												   // lineto (a line segment)
diff --git a/src/drvlwo.cpp b/src/drvlwo.cpp
index b12ab8d..66b9c83 100644
--- a/src/drvlwo.cpp
+++ b/src/drvlwo.cpp
@@ -181,8 +181,8 @@ void drvLWO::show_path()
 }
 
 
-static DriverDescriptionT < drvLWO > D_lwo("lwo", "LightWave 3D object format", "","lwo", false,	// if backend supports subpathes, else 0
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvLWO > D_lwo("lwo", "LightWave 3D object format", "","lwo", false,	// if backend supports subpaths, else 0
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvmagick++.cpp b/src/drvmagick++.cpp
index 4439196..1b9fdbe 100644
--- a/src/drvmagick++.cpp
+++ b/src/drvmagick++.cpp
@@ -385,8 +385,8 @@ static DriverDescriptionT < drvMAGICK > D_magick("magick", "MAGICK driver compat
 												 "formats. The output format is determined automatically by Image-/GraphicsMagick based on the suffix "
 												 "of the output filename. So an output file test.png will force the creation of an image in PNG format."
 												 " This binary of pstoedit was compiled against version " MagickLibVersionText " of " MagickPackageName ".",
-												 "...", true,	// backend supports subpathes
-												 // if subpathes are supported, the backend must deal with
+												 "...", true,	// backend supports subpaths
+												 // if subpaths are supported, the backend must deal with
 												 // sequences of the following form
 												 // moveto (start of subpath)
 												 // lineto (a line segment)
diff --git a/src/drvmma.cpp b/src/drvmma.cpp
index 010c865..fa08509 100644
--- a/src/drvmma.cpp
+++ b/src/drvmma.cpp
@@ -286,8 +286,8 @@ void drvMMA::RGBColor(float R, float G, float B)
 	}
 }
 
-static DriverDescriptionT < drvMMA > D_mma("mma", "Mathematica graphics", "","m", true,	// backend supports subpathes
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvMMA > D_mma("mma", "Mathematica graphics", "","m", true,	// backend supports subpaths
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvmpost.cpp b/src/drvmpost.cpp
index ad033db..2f75ce1 100644
--- a/src/drvmpost.cpp
+++ b/src/drvmpost.cpp
@@ -416,8 +416,8 @@ void drvMPOST::show_path()
 	print_coords();
 }
 
-static DriverDescriptionT < drvMPOST > D_mpost("mpost", "MetaPost format", "","mp", true,	// if backend supports subpathes, else 0
-											   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvMPOST > D_mpost("mpost", "MetaPost format", "","mp", true,	// if backend supports subpaths, else 0
+											   // if subpaths are supported, the backend must deal with
 											   // sequences of the following form
 											   // moveto (start of subpath)
 											   // lineto (a line segment)
diff --git a/src/drvpcb1.cpp b/src/drvpcb1.cpp
index d02d27d..814f232 100644
--- a/src/drvpcb1.cpp
+++ b/src/drvpcb1.cpp
@@ -440,8 +440,8 @@ static DriverDescriptionT<drvPCB1> D_pcb("pcbi","engrave data - insulate/PCB for
 										 "See \\URL{http://home.vr-web.de/\\Tilde hans-juergen-jahn/software/devpcb.html} for more details.",
 										 "dat",
 								
-		false, // backend supports subpathes
-		   // if subpathes are supported, the backend must deal with
+		false, // backend supports subpaths
+		   // if subpaths are supported, the backend must deal with
 		   // sequences of the following form
 		   // moveto (start of subpath)
 		   // lineto (a line segment)
diff --git a/src/drvpcb2.cpp b/src/drvpcb2.cpp
index 3ff18b5..2f83d6b 100644
--- a/src/drvpcb2.cpp
+++ b/src/drvpcb2.cpp
@@ -287,8 +287,8 @@ void drvPCB2::show_path()
 
 
 static DriverDescriptionT < drvPCB2 > D_pcb("pcb", "pcb format", 
-											"See also: \\URL{http://pcb.sourceforge.net} and \\URL{http://www.penguin.cz/\\Tilde utx/pstoedit-pcb/}","pcb", false,	// if backend supports subpathes
-												   // if subpathes are supported, the backend must deal with
+											"See also: \\URL{http://pcb.sourceforge.net} and \\URL{http://www.penguin.cz/\\Tilde utx/pstoedit-pcb/}","pcb", false,	// if backend supports subpaths
+												   // if subpaths are supported, the backend must deal with
 												   // sequences of the following form
 												   // moveto (start of subpath)
 												   // lineto (a line segment)
diff --git a/src/drvpcbfill.cpp b/src/drvpcbfill.cpp
index 2268a43..f2b5992 100644
--- a/src/drvpcbfill.cpp
+++ b/src/drvpcbfill.cpp
@@ -75,8 +75,8 @@ void drvPCBFILL::show_path()
 
 
 static DriverDescriptionT < drvPCBFILL > D_pcbfill("pcbfill", "pcb format with fills", 
-												   "See also: \\URL{http://pcb.sourceforge.net}","pcbfill", false,	// if backend supports subpathes
-												   // if subpathes are supported, the backend must deal with
+												   "See also: \\URL{http://pcb.sourceforge.net}","pcbfill", false,	// if backend supports subpaths
+												   // if subpaths are supported, the backend must deal with
 												   // sequences of the following form
 												   // moveto (start of subpath)
 												   // lineto (a line segment)
diff --git a/src/drvpdf.cpp b/src/drvpdf.cpp
index b858976..959390d 100644
--- a/src/drvpdf.cpp
+++ b/src/drvpdf.cpp
@@ -693,8 +693,8 @@ void drvPDF::show_path()
 	buffer << drawingop << endl;
 }
 
-static DriverDescriptionT < drvPDF > D_pdf("pdf", "Adobe's Portable Document Format", "","pdf", true,	// if backend supports subpathes, else 0
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvPDF > D_pdf("pdf", "Adobe's Portable Document Format", "","pdf", true,	// if backend supports subpaths, else 0
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvpic.cpp b/src/drvpic.cpp
index 5e6ef8c..6bdfe70 100644
--- a/src/drvpic.cpp
+++ b/src/drvpic.cpp
@@ -426,8 +426,8 @@ void drvPIC::show_path()
 	print_coords();
 }
 
-static DriverDescriptionT < drvPIC > D_PIC("pic", "PIC format for troff et.al.","", "pic", true,	// backend supports subpathes
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvPIC > D_PIC("pic", "PIC format for troff et.al.","", "pic", true,	// backend supports subpaths
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvpptx.cpp b/src/drvpptx.cpp
index 71ad36f..9dd814b 100644
--- a/src/drvpptx.cpp
+++ b/src/drvpptx.cpp
@@ -1770,8 +1770,8 @@ D_pptx("pptx",
        "PresentationML (PowerPoint) format",
        "This is the format used internally by Microsoft PowerPoint.  LibreOffice can also read/write PowerPoint files albeit with some lack of functionality.",
        "pptx",
-       true,   // backend supports subpathes
-       // if subpathes are supported, the backend must deal with
+       true,   // backend supports subpaths
+       // if subpaths are supported, the backend must deal with
        // sequences of the following form
        // moveto (start of subpath)
        // lineto (a line segment)
diff --git a/src/drvrib.cpp b/src/drvrib.cpp
index ddf3121..cc3e031 100644
--- a/src/drvrib.cpp
+++ b/src/drvrib.cpp
@@ -106,8 +106,8 @@ void drvRIB::show_path()
 }
 
 
-static DriverDescriptionT < drvRIB > D_rib("rib", "RenderMan Interface Bytestream", "","rib", false,	// if backend supports subpathes, else 0
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvRIB > D_rib("rib", "RenderMan Interface Bytestream", "","rib", false,	// if backend supports subpaths, else 0
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvrpl.cpp b/src/drvrpl.cpp
index 81c0d9f..9d87519 100644
--- a/src/drvrpl.cpp
+++ b/src/drvrpl.cpp
@@ -95,8 +95,8 @@ void drvRPL::show_path()
 	print_coords();
 }
 
-static DriverDescriptionT < drvRPL > D_rpl("rpl", "Real3D Programming Language format","", "rpl", false,	// if backend supports subpathes, else 0
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvRPL > D_rpl("rpl", "Real3D Programming Language format","", "rpl", false,	// if backend supports subpaths, else 0
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvsampl.cpp b/src/drvsampl.cpp
index 29ef163..f5ea009 100644
--- a/src/drvsampl.cpp
+++ b/src/drvsampl.cpp
@@ -258,8 +258,8 @@ void drvSAMPL::show_image(const PSImage & imageinfo)
 	}
 }
 
-static DriverDescriptionT < drvSAMPL > D_sampl("sample", "sample driver: if you do not want to see this, uncomment the corresponding line in makefile and make again", "this is a long description for the sample driver","sam", true,	// backend supports subpathes
-											   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvSAMPL > D_sampl("sample", "sample driver: if you do not want to see this, uncomment the corresponding line in makefile and make again", "this is a long description for the sample driver","sam", true,	// backend supports subpaths
+											   // if subpaths are supported, the backend must deal with
 											   // sequences of the following form
 											   // moveto (start of subpath)
 											   // lineto (a line segment)
diff --git a/src/drvsvm.cpp b/src/drvsvm.cpp
index 381a813..f049e01 100644
--- a/src/drvsvm.cpp
+++ b/src/drvsvm.cpp
@@ -1048,7 +1048,7 @@ static DriverDescriptionT < drvSVM > D_svm("svm",
                                            "StarView/OpenOffice.org metafile", 
                                            "StarView/OpenOffice.org metafile, readable from OpenOffice.org 1.0/StarOffice 6.0 and above.",
                                            "svm", 
-                                           true,	// backend supports subpathes
+                                           true,	// backend supports subpaths
 										   true,	// backend does support curves
 										   true,	// backend supports elements which are filled and have edges 
 										   true,	// backend supports text
diff --git a/src/drvswf.cpp b/src/drvswf.cpp
index e87144c..a21e6a5 100644
--- a/src/drvswf.cpp
+++ b/src/drvswf.cpp
@@ -698,8 +698,8 @@ static DriverDescriptionT < drvSWF > D_SWF("swf",	//
 										   "SWF driver: ",	//
 										   "",
 										   "swf",	//
-										   false,	// backend supports subpathes
-										   // if subpathes are supported, the backend must deal with
+										   false,	// backend supports subpaths
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/drvtext.cpp b/src/drvtext.cpp
index 3e446c7..0092e36 100644
--- a/src/drvtext.cpp
+++ b/src/drvtext.cpp
@@ -198,8 +198,8 @@ void drvTEXT::show_image(const PSImage & imageinfo)
 	unused(&imageinfo);
 }
 
-static DriverDescriptionT < drvTEXT > D_text("text", "text in different forms ", "","txt", false,	// if backend supports subpathes, else 0
-											 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvTEXT > D_text("text", "text in different forms ", "","txt", false,	// if backend supports subpaths, else 0
+											 // if subpaths are supported, the backend must deal with
 											 // sequences of the following form
 											 // moveto (start of subpath)
 											 // lineto (a line segment)
diff --git a/src/drvtgif.cpp b/src/drvtgif.cpp
index 056cf2c..6189b75 100644
--- a/src/drvtgif.cpp
+++ b/src/drvtgif.cpp
@@ -371,8 +371,8 @@ void drvTGIF::show_rectangle(const float llx, const float lly, const float urx,
 		<< "," << Fill << "," << objectId++ << ",0,0,0,0,0,'1',[" << endl << "])." << endl;
 }
 
-static DriverDescriptionT < drvTGIF > D_tgif("tgif", "Tgif .obj format", "","obj", false,	// if backend supports subpathes, else 0
-											 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvTGIF > D_tgif("tgif", "Tgif .obj format", "","obj", false,	// if backend supports subpaths, else 0
+											 // if subpaths are supported, the backend must deal with
 											 // sequences of the following form
 											 // moveto (start of subpath)
 											 // lineto (a line segment)
diff --git a/src/drvtk.cpp b/src/drvtk.cpp
index 6007799..a0ea388 100644
--- a/src/drvtk.cpp
+++ b/src/drvtk.cpp
@@ -1077,8 +1077,8 @@ void drvTK::show_path()
 }
 
 
-static DriverDescriptionT < drvTK > D_tk("tk", "tk and/or tk applet source code", "","tk", false,	// backend supports subpathes
-										 // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvTK > D_tk("tk", "tk and/or tk applet source code", "","tk", false,	// backend supports subpaths
+										 // if subpaths are supported, the backend must deal with
 										 // sequences of the following form
 										 // moveto (start of subpath)
 										 // lineto (a line segment)
diff --git a/src/drvvtk.cpp b/src/drvvtk.cpp
index 0b60d4d..dc26737 100644
--- a/src/drvvtk.cpp
+++ b/src/drvvtk.cpp
@@ -153,8 +153,8 @@ void drvVTK::show_image(const PSImage & )
 	errf << "\t\tFatal: unexpected case in drvVTK - show_image " << endl;
 }
 
-static DriverDescriptionT < drvVTK > D_VTK("vtk", "VTK driver: if you do not want to see this, uncomment the corresponding line in makefile and make again", "this is a long description for the VTKe driver","vtk", false,	// backend supports subpathes
-											   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvVTK > D_VTK("vtk", "VTK driver: if you do not want to see this, uncomment the corresponding line in makefile and make again", "this is a long description for the VTKe driver","vtk", false,	// backend supports subpaths
+											   // if subpaths are supported, the backend must deal with
 											   // sequences of the following form
 											   // moveto (start of subpath)
 											   // lineto (a line segment)
diff --git a/src/drvwmf.cpp b/src/drvwmf.cpp
index 9449188..37c1426 100644
--- a/src/drvwmf.cpp
+++ b/src/drvwmf.cpp
@@ -1429,8 +1429,8 @@ void drvWMF::show_image(const PSImage & image)
 // Under libemf, a createMetaFile effectively creates an enhMetaFile but that confuses almost all
 // programs which expect to read an WMF with an aldus placeable header
 // 
-static DriverDescriptionT < drvWMF > D_wmf("wmf", "MS Windows Metafile", "","wmf", true,	// backend supports subpathes
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvWMF > D_wmf("wmf", "MS Windows Metafile", "","wmf", true,	// backend supports subpaths
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
@@ -1452,8 +1452,8 @@ static DriverDescriptionT < drvWMF > D_wmf("wmf", "MS Windows Metafile", "","wmf
 										   );
 #endif
 
-static DriverDescriptionT < drvWMF > D_emf("emf", "Enhanced MS Windows Metafile", "","emf", true,	// backend supports subpathes
-										   // if subpathes are supported, the backend must deal with
+static DriverDescriptionT < drvWMF > D_emf("emf", "Enhanced MS Windows Metafile", "","emf", true,	// backend supports subpaths
+										   // if subpaths are supported, the backend must deal with
 										   // sequences of the following form
 										   // moveto (start of subpath)
 										   // lineto (a line segment)
diff --git a/src/lexyy.cpp b/src/lexyy.cpp
index 661953b..bb3ef4b 100644
--- a/src/lexyy.cpp
+++ b/src/lexyy.cpp
@@ -2799,7 +2799,7 @@ YY_RULE_SETUP
 				// this is an intermediate moveto
 				// if backend supports subpaths add it
 				// else dump last path and start a new one
-				if (backend->globaloptions.simulateSubPaths || backend->driverdesc.backendSupportsSubPathes) {
+				if (backend->globaloptions.simulateSubPaths || backend->driverdesc.backendSupportsSubPaths) {
 //					Point p(origx,origy);
 					backend->addtopath(new Moveto(origx,origy));  
 				} else {
@@ -2888,7 +2888,7 @@ YY_RULE_SETUP
 				backend->removeFromElementFromPath();
 				// no need to close the path, it's already closed
 			 } /* else */ {
-				if (backend->globaloptions.simulateSubPaths || backend->driverdesc.backendSupportsSubPathes) {
+				if (backend->globaloptions.simulateSubPaths || backend->driverdesc.backendSupportsSubPaths) {
 			 		backend->addtopath(new Closepath(origx,origy)); 
 				} else {
 			 		backend->addtopath(new Lineto(origx,origy)); // pass p as array
diff --git a/src/pstoedit.cpp b/src/pstoedit.cpp
index d36f52b..4ff4fd8 100644
--- a/src/pstoedit.cpp
+++ b/src/pstoedit.cpp
@@ -1301,7 +1301,7 @@ To get the pre 8.00 behaviour, either use -dNOEPS or run the file with (filename
 					{
 						// local scope to force delete before delete of driver
 						outputdriver->setdefaultFontName(options.replacementfont.value.c_str());
-						//      if (nosubpaths) ((DriverDescription*) outputdriver->Pdriverdesc)->backendSupportsSubPathes=false;
+						//      if (nosubpaths) ((DriverDescription*) outputdriver->Pdriverdesc)->backendSupportsSubPaths=false;
 //						outputdriver->simulateSubPaths = (bool) options.simulateSubPaths;
 
 						const char * bbfilename = 0;
@@ -1462,7 +1462,7 @@ static DriverDescription_S * getPstoeditDriverInfo_internal(bool withgsdrivers)
 			curR->explanation =  currentDD->short_explanation;
 			curR->suffix =  currentDD->suffix;
 			curR->additionalInfo =  currentDD->additionalInfo();
-			curR->backendSupportsSubPathes = (int) currentDD->backendSupportsSubPathes;
+			curR->backendSupportsSubPaths = (int) currentDD->backendSupportsSubPaths;
 			curR->backendSupportsCurveto = (int) currentDD->backendSupportsCurveto;
 			curR->backendSupportsMerging = (int) currentDD->backendSupportsMerging;
 			curR->backendSupportsText = (int) currentDD->backendSupportsText;
diff --git a/src/pstoedll.h b/src/pstoedll.h
index 686077b..2cd370a 100644
--- a/src/pstoedll.h
+++ b/src/pstoedll.h
@@ -32,7 +32,7 @@ struct DriverDescription_S {
 	const char *	explanation;
 	const char *	suffix;
 	const char *	additionalInfo;
-	int		backendSupportsSubPathes;
+	int		backendSupportsSubPaths;
 	int		backendSupportsCurveto;
 	int 		backendSupportsMerging; 
 	int 		backendSupportsText;
